// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: notifications/notifications.proto

package notifications

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateNotificationRequest contains the details needed to create a new notification.
type CreateNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`                   // Kind of notification
	Payload       string                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`             // JSON string for payload
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationRequest) Reset() {
	*x = CreateNotificationRequest{}
	mi := &file_notifications_notifications_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRequest) ProtoMessage() {}

func (x *CreateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_notifications_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notifications_notifications_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateNotificationRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CreateNotificationRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

// CreateNotificationResponse contains the result of a notification creation attempt.
type CreateNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the notification
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationResponse) Reset() {
	*x = CreateNotificationResponse{}
	mi := &file_notifications_notifications_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationResponse) ProtoMessage() {}

func (x *CreateNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_notifications_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notifications_notifications_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNotificationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// MarkAsReadRequest contains the details needed to mark a notification as read.
type MarkAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                       // ID of the notification
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadRequest) Reset() {
	*x = MarkAsReadRequest{}
	mi := &file_notifications_notifications_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadRequest) ProtoMessage() {}

func (x *MarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_notifications_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_notifications_notifications_proto_rawDescGZIP(), []int{2}
}

func (x *MarkAsReadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MarkAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// MarkAsReadResponse contains the result of a notification read attempt.
type MarkAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadResponse) Reset() {
	*x = MarkAsReadResponse{}
	mi := &file_notifications_notifications_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadResponse) ProtoMessage() {}

func (x *MarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_notifications_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_notifications_notifications_proto_rawDescGZIP(), []int{3}
}

// MarkAllAsReadRequest contains the details needed to mark all notifications as read.
type MarkAllAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`                     // IDs of the notifications
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllAsReadRequest) Reset() {
	*x = MarkAllAsReadRequest{}
	mi := &file_notifications_notifications_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllAsReadRequest) ProtoMessage() {}

func (x *MarkAllAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_notifications_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAllAsReadRequest) Descriptor() ([]byte, []int) {
	return file_notifications_notifications_proto_rawDescGZIP(), []int{4}
}

func (x *MarkAllAsReadRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *MarkAllAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// MarkAllAsReadResponse contains the result of a notification read attempt.
type MarkAllAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllAsReadResponse) Reset() {
	*x = MarkAllAsReadResponse{}
	mi := &file_notifications_notifications_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllAsReadResponse) ProtoMessage() {}

func (x *MarkAllAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_notifications_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAllAsReadResponse) Descriptor() ([]byte, []int) {
	return file_notifications_notifications_proto_rawDescGZIP(), []int{5}
}

// ListNotificationsRequest contains the details needed to list notifications.
type ListNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`                   // Kind of notification (optional)
	Cursor        string                 `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`               // Cursor for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsRequest) Reset() {
	*x = ListNotificationsRequest{}
	mi := &file_notifications_notifications_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsRequest) ProtoMessage() {}

func (x *ListNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_notifications_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_notifications_proto_rawDescGZIP(), []int{6}
}

func (x *ListNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListNotificationsRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ListNotificationsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// NotificationResponse contains the details of a notification.
type NotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // ID of the notification
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`                            // Kind of notification
	Payload       string                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`                      // JSON string for payload
	ReadAt        string                 `protobuf:"bytes,4,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`          // Time the notification was read
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Time the notification was created
	UpdatedAt     string                 `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Time the notification was last updated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	mi := &file_notifications_notifications_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_notifications_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_notifications_notifications_proto_rawDescGZIP(), []int{7}
}

func (x *NotificationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotificationResponse) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *NotificationResponse) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *NotificationResponse) GetReadAt() string {
	if x != nil {
		return x.ReadAt
	}
	return ""
}

func (x *NotificationResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *NotificationResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// ListNotificationsResponse contains the result of a notification list attempt.
type ListNotificationsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Notifications []*NotificationResponse `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"` // List of notifications
	Cursor        string                  `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`               // Cursor for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsResponse) Reset() {
	*x = ListNotificationsResponse{}
	mi := &file_notifications_notifications_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsResponse) ProtoMessage() {}

func (x *ListNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_notifications_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_notifications_proto_rawDescGZIP(), []int{8}
}

func (x *ListNotificationsResponse) GetNotifications() []*NotificationResponse {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *ListNotificationsResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

var File_notifications_notifications_proto protoreflect.FileDescriptor

const file_notifications_notifications_proto_rawDesc = "" +
	"\n" +
	"!notifications/notifications.proto\x12\rnotifications\"b\n" +
	"\x19CreateNotificationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x18\n" +
	"\apayload\x18\x03 \x01(\tR\apayload\",\n" +
	"\x1aCreateNotificationResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"<\n" +
	"\x11MarkAsReadRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\x14\n" +
	"\x12MarkAsReadResponse\"A\n" +
	"\x14MarkAllAsReadRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\x17\n" +
	"\x15MarkAllAsReadResponse\"_\n" +
	"\x18ListNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"\xab\x01\n" +
	"\x14NotificationResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x18\n" +
	"\apayload\x18\x03 \x01(\tR\apayload\x12\x17\n" +
	"\aread_at\x18\x04 \x01(\tR\x06readAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\tR\tupdatedAt\"~\n" +
	"\x19ListNotificationsResponse\x12I\n" +
	"\rnotifications\x18\x01 \x03(\v2#.notifications.NotificationResponseR\rnotifications\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor2\xa0\x03\n" +
	"\x14NotificationsService\x12k\n" +
	"\x12CreateNotification\x12(.notifications.CreateNotificationRequest\x1a).notifications.CreateNotificationResponse\"\x00\x12S\n" +
	"\n" +
	"MarkAsRead\x12 .notifications.MarkAsReadRequest\x1a!.notifications.MarkAsReadResponse\"\x00\x12\\\n" +
	"\rMarkAllAsRead\x12#.notifications.MarkAllAsReadRequest\x1a$.notifications.MarkAllAsReadResponse\"\x00\x12h\n" +
	"\x11ListNotifications\x12'.notifications.ListNotificationsRequest\x1a(.notifications.ListNotificationsResponse\"\x00BJZHgithub.com/hitesh22rana/chronoverse/proto/go/notifications;notificationsb\x06proto3"

var (
	file_notifications_notifications_proto_rawDescOnce sync.Once
	file_notifications_notifications_proto_rawDescData []byte
)

func file_notifications_notifications_proto_rawDescGZIP() []byte {
	file_notifications_notifications_proto_rawDescOnce.Do(func() {
		file_notifications_notifications_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notifications_notifications_proto_rawDesc), len(file_notifications_notifications_proto_rawDesc)))
	})
	return file_notifications_notifications_proto_rawDescData
}

var file_notifications_notifications_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_notifications_notifications_proto_goTypes = []any{
	(*CreateNotificationRequest)(nil),  // 0: notifications.CreateNotificationRequest
	(*CreateNotificationResponse)(nil), // 1: notifications.CreateNotificationResponse
	(*MarkAsReadRequest)(nil),          // 2: notifications.MarkAsReadRequest
	(*MarkAsReadResponse)(nil),         // 3: notifications.MarkAsReadResponse
	(*MarkAllAsReadRequest)(nil),       // 4: notifications.MarkAllAsReadRequest
	(*MarkAllAsReadResponse)(nil),      // 5: notifications.MarkAllAsReadResponse
	(*ListNotificationsRequest)(nil),   // 6: notifications.ListNotificationsRequest
	(*NotificationResponse)(nil),       // 7: notifications.NotificationResponse
	(*ListNotificationsResponse)(nil),  // 8: notifications.ListNotificationsResponse
}
var file_notifications_notifications_proto_depIdxs = []int32{
	7, // 0: notifications.ListNotificationsResponse.notifications:type_name -> notifications.NotificationResponse
	0, // 1: notifications.NotificationsService.CreateNotification:input_type -> notifications.CreateNotificationRequest
	2, // 2: notifications.NotificationsService.MarkAsRead:input_type -> notifications.MarkAsReadRequest
	4, // 3: notifications.NotificationsService.MarkAllAsRead:input_type -> notifications.MarkAllAsReadRequest
	6, // 4: notifications.NotificationsService.ListNotifications:input_type -> notifications.ListNotificationsRequest
	1, // 5: notifications.NotificationsService.CreateNotification:output_type -> notifications.CreateNotificationResponse
	3, // 6: notifications.NotificationsService.MarkAsRead:output_type -> notifications.MarkAsReadResponse
	5, // 7: notifications.NotificationsService.MarkAllAsRead:output_type -> notifications.MarkAllAsReadResponse
	8, // 8: notifications.NotificationsService.ListNotifications:output_type -> notifications.ListNotificationsResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_notifications_notifications_proto_init() }
func file_notifications_notifications_proto_init() {
	if File_notifications_notifications_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notifications_notifications_proto_rawDesc), len(file_notifications_notifications_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notifications_notifications_proto_goTypes,
		DependencyIndexes: file_notifications_notifications_proto_depIdxs,
		MessageInfos:      file_notifications_notifications_proto_msgTypes,
	}.Build()
	File_notifications_notifications_proto = out.File
	file_notifications_notifications_proto_goTypes = nil
	file_notifications_notifications_proto_depIdxs = nil
}
