apiVersion: v1
kind: ConfigMap
metadata:
  name: workflows-service-config
  namespace: chronoverse
  labels:
    app: workflows-service
    component: backend
data:
  GRPC_REQUEST_TIMEOUT: "500ms"
  GRPC_TLS_ENABLED: "true"
  GRPC_TLS_CA_FILE: "certs/ca/ca.crt"
  GRPC_PORT: "50052"
  GRPC_TLS_CERT_FILE: "certs/workflows-service/workflows-service.crt"
  GRPC_TLS_KEY_FILE: "certs/workflows-service/workflows-service.key"
  ENV: "production"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflows-service
  namespace: chronoverse
  labels:
    app: workflows-service
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: workflows-service
      component: backend
  template:
    metadata:
      labels:
        app: workflows-service
        component: backend
    spec:
      initContainers:
      - name: wait-for-certs
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          while [ ! -f /certs/auth.ed ] || [ ! -f /certs/auth.ed.pub ]; do 
            echo "Waiting for certificates..."
            sleep 1
          done
          echo "âœ… Certificates found!"
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      containers:
      - name: workflows-service
        image: ghcr.io/hitesh22rana/chronoverse/workflows-service:latest
        ports:
        - containerPort: 50052
        envFrom:
        - configMapRef:
            name: postgres-connection-config
        - secretRef:
            name: postgres-secret
        - configMapRef:
            name: redis-connection-config
        - configMapRef:
            name: kafka-connection-config
        - configMapRef:
            name: observability-config
        - configMapRef:
            name: workflows-service-config
        resources:
          limits:
            cpu: "250m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
        livenessProbe:
          exec:
            command:
            - /bin/grpc-health-probe
            - -addr=localhost:50052
            - -connect-timeout=250ms
            - -rpc-timeout=250ms
            - -tls
            - -tls-ca-cert=certs/ca/ca.crt
            - -tls-client-cert=certs/workflows-service/workflows-service.crt
            - -tls-client-key=certs/workflows-service/workflows-service.key
            - -tls-server-name=workflows-service
            - -rpc-header=Audience:grpc_probe
            - -rpc-header=Role:admin
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
          initialDelaySeconds: 30
        readinessProbe:
          exec:
            command:
            - /bin/grpc-health-probe
            - -addr=localhost:50052
            - -connect-timeout=250ms
            - -rpc-timeout=250ms
            - -tls
            - -tls-ca-cert=certs/ca/ca.crt
            - -tls-client-cert=certs/workflows-service/workflows-service.crt
            - -tls-client-key=certs/workflows-service/workflows-service.key
            - -tls-server-name=workflows-service
            - -rpc-header=Audience:grpc_probe
            - -rpc-header=Role:admin
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
      volumes:
      - name: certs-storage
        persistentVolumeClaim:
          claimName: certs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: workflows-service
  namespace: chronoverse
  labels:
    app: workflows-service
    component: backend
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: workflows-service
    component: backend
  ports:
  - port: 50052
    targetPort: 50052
