apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduling-worker
  namespace: chronoverse
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scheduling-worker
  template:
    metadata:
      labels:
        app: scheduling-worker
    spec:
      initContainers:
      - name: wait-for-certs
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          while [ ! -f /certs/auth.ed ] || [ ! -f /certs/auth.ed.pub ]; do 
            echo "Waiting for certificates..."
            sleep 1
          done
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      containers:
      - name: scheduling-worker
        image: ghcr.io/hitesh22rana/chronoverse/scheduling-worker:latest
        envFrom:
        - configMapRef:
            name: database-config
        - secretRef:
            name: database-secrets
        - configMapRef:
            name: observability-config
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "512Mi"
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      volumes:
      - name: certs-storage
        hostPath:
          path: /tmp/chronoverse-certs
          type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-worker
  namespace: chronoverse
spec:
  replicas: 2
  selector:
    matchLabels:
      app: workflow-worker
  template:
    metadata:
      labels:
        app: workflow-worker
    spec:
      initContainers:
      - name: wait-for-certs
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          while [ ! -f /certs/auth.ed ] || [ ! -f /certs/auth.ed.pub ]; do 
            echo "Waiting for certificates..."
            sleep 1
          done
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      containers:
      - name: workflow-worker
        image: ghcr.io/hitesh22rana/chronoverse/workflow-worker:latest
        env:
        - name: KAFKA_CONSUMER_GROUP
          value: "workflow-worker"
        envFrom:
        - configMapRef:
            name: database-config
        - secretRef:
            name: database-secrets
        - configMapRef:
            name: grpc-config
        - configMapRef:
            name: workflows-service-config
        - configMapRef:
            name: jobs-service-config
        - configMapRef:
            name: notifications-service-config
        - configMapRef:
            name: docker-proxy-config
        - configMapRef:
            name: observability-config
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "512Mi"
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      volumes:
      - name: certs-storage
        hostPath:
          path: /tmp/chronoverse-certs
          type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: execution-worker
  namespace: chronoverse
spec:
  replicas: 2
  selector:
    matchLabels:
      app: execution-worker
  template:
    metadata:
      labels:
        app: execution-worker
    spec:
      initContainers:
      - name: wait-for-certs
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          while [ ! -f /certs/auth.ed ] || [ ! -f /certs/auth.ed.pub ]; do 
            echo "Waiting for certificates..."
            sleep 1
          done
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      containers:
      - name: execution-worker
        image: ghcr.io/hitesh22rana/chronoverse/execution-worker:latest
        env:
        - name: KAFKA_CONSUMER_GROUP
          value: "execution-worker"
        envFrom:
        - configMapRef:
            name: database-config
        - secretRef:
            name: database-secrets
        - configMapRef:
            name: grpc-config
        - configMapRef:
            name: workflows-service-config
        - configMapRef:
            name: jobs-service-config
        - configMapRef:
            name: notifications-service-config
        - configMapRef:
            name: docker-proxy-config
        - configMapRef:
            name: observability-config
        resources:
          limits:
            cpu: "1500m"
            memory: "1500Mi"
          requests:
            cpu: "750m"
            memory: "768Mi"
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      volumes:
      - name: certs-storage
        hostPath:
          path: /tmp/chronoverse-certs
          type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: joblogs-processor
  namespace: chronoverse
spec:
  replicas: 2
  selector:
    matchLabels:
      app: joblogs-processor
  template:
    metadata:
      labels:
        app: joblogs-processor
    spec:
      initContainers:
      - name: wait-for-certs
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          while [ ! -f /certs/auth.ed ] || [ ! -f /certs/auth.ed.pub ]; do 
            echo "Waiting for certificates..."
            sleep 1
          done
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      containers:
      - name: joblogs-processor
        image: ghcr.io/hitesh22rana/chronoverse/joblogs-processor:latest
        env:
        - name: KAFKA_CONSUMER_GROUP
          value: "joblogs-processor"
        envFrom:
        - configMapRef:
            name: database-config
        - secretRef:
            name: database-secrets
        - configMapRef:
            name: observability-config
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "512Mi"
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      volumes:
      - name: certs-storage
        hostPath:
          path: /tmp/chronoverse-certs
          type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-processor
  namespace: chronoverse
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics-processor
  template:
    metadata:
      labels:
        app: analytics-processor
    spec:
      initContainers:
      - name: wait-for-certs
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          while [ ! -f /certs/auth.ed ] || [ ! -f /certs/auth.ed.pub ]; do 
            echo "Waiting for certificates..."
            sleep 1
          done
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      containers:
      - name: analytics-processor
        image: ghcr.io/hitesh22rana/chronoverse/analytics-processor:latest
        env:
        - name: KAFKA_CONSUMER_GROUP
          value: "analytics-processor"
        envFrom:
        - configMapRef:
            name: database-config
        - secretRef:
            name: database-secrets
        - configMapRef:
            name: observability-config
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "512Mi"
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      volumes:
      - name: certs-storage
        hostPath:
          path: /tmp/chronoverse-certs
          type: DirectoryOrCreate
