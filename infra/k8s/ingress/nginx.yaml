apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: chronoverse
data:
  nginx.conf: |
    events {}

    http {
        server {
            listen 80;

            location / {
                proxy_pass http://dashboard:3000;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Special configuration for SSE events endpoint
            location ~ ^/api/workflows/[^/]+/jobs/[^/]+/events$ {
                rewrite ^/api/(.*)$ /$1 break;
                proxy_pass http://server:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # SSE specific settings
                proxy_buffering off;
                proxy_cache off;
                proxy_set_header Connection "";
                proxy_http_version 1.1;
                chunked_transfer_encoding off;

                # Prevent timeouts for long-running connections
                proxy_read_timeout 24h;
                proxy_send_timeout 24h;
                proxy_connect_timeout 60s;
            }

            location /api/ {
                proxy_pass http://server:8080/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # Standard proxy settings with buffering enabled
                proxy_buffering on;
                proxy_cache off;

                # Standard API timeouts
                proxy_read_timeout 60s;
                proxy_send_timeout 60s;
                proxy_connect_timeout 10s;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: chronoverse
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "200m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: chronoverse
spec:
  type: ClusterIP
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80