syntax = "proto3";

package analytics;

option go_package = "github.com/hitesh22rana/chronoverse/proto/go/analytics;analytics";

// GetUserAnalyticsRequest contains the ID of the user whose activity is to be retrieved.
message GetUserAnalyticsRequest {
    string user_id = 1; // ID of the user whose activity is to be retrieved
}

// GetUserAnalyticsResponse contains the activity details of a user.
message GetUserAnalyticsResponse {
    uint32 total_workflows              = 1; // Total workflows ever created by the user (including active, terminated and deleted)
    uint64 total_jobs                   = 2; // Total jobs ever created by the user's workflows (including active, terminated and deleted)
    uint64 total_joblogs                = 3; // Total number of job logs generated by the user's workflows across all jobs
    uint64 total_job_execution_duration = 4; // Sum of job execution durations for all jobs
}

// GetWorkflowAnalyticsRequest contains the ID of the workflow whose activity is to be retrieved.
message GetWorkflowAnalyticsRequest {
    string user_id     = 1; // ID of the user who owns the workflow
    string workflow_id = 2; // ID of the workflow whose activity is to be retrieved
}

// GetWorkflowAnalyticsResponse contains the activity details of a workflow.
message GetWorkflowAnalyticsResponse {
    string workflow_id                   = 1; // ID of the workflow
    uint64 total_job_execution_duration  = 2; // Total job execution duration in seconds
    uint32 total_jobs                    = 3; // Total jobs ever created by the workflow
    uint64 total_joblogs                 = 4; // Total number of job logs generated by the workflow
}

// AnalyticsService handles analytics related operations.
service AnalyticsService {
    // GetUserAnalytics retrieves the analytics of a user based on their ID.
    rpc GetUserAnalytics(GetUserAnalyticsRequest) returns (GetUserAnalyticsResponse) {}

    // GetWorkflowAnalytics retrieves the analytics of a workflow based on its ID.
    rpc GetWorkflowAnalytics(GetWorkflowAnalyticsRequest) returns (GetWorkflowAnalyticsResponse) {}
}