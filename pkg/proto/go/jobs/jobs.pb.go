// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: jobs/jobs.proto

package jobs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ScheduleJobRequest contains the details needed to create a new job.
type ScheduleJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`    // ID of the workflow
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // ID of the user
	ScheduledAt   string                 `protobuf:"bytes,3,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"` // Time the job is scheduled to run
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleJobRequest) Reset() {
	*x = ScheduleJobRequest{}
	mi := &file_jobs_jobs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleJobRequest) ProtoMessage() {}

func (x *ScheduleJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleJobRequest.ProtoReflect.Descriptor instead.
func (*ScheduleJobRequest) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduleJobRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ScheduleJobRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ScheduleJobRequest) GetScheduledAt() string {
	if x != nil {
		return x.ScheduledAt
	}
	return ""
}

// ScheduleJobResponse contains the result of a job creation attempt.
type ScheduleJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the job
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleJobResponse) Reset() {
	*x = ScheduleJobResponse{}
	mi := &file_jobs_jobs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleJobResponse) ProtoMessage() {}

func (x *ScheduleJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleJobResponse.ProtoReflect.Descriptor instead.
func (*ScheduleJobResponse) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleJobResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// UpdateJobStatusRequest contains the details needed to update the status of a job.
type UpdateJobStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // ID of the job
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // Status of the job
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobStatusRequest) Reset() {
	*x = UpdateJobStatusRequest{}
	mi := &file_jobs_jobs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobStatusRequest) ProtoMessage() {}

func (x *UpdateJobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobStatusRequest) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateJobStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateJobStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// UpdateJobStatusResponse contains the result of a job status update attempt.
type UpdateJobStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobStatusResponse) Reset() {
	*x = UpdateJobStatusResponse{}
	mi := &file_jobs_jobs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobStatusResponse) ProtoMessage() {}

func (x *UpdateJobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateJobStatusResponse) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{3}
}

// GetJobRequest contains the details needed to get a job.
type GetJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // ID of the job
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"` // ID of the workflow
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // ID of the user
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobRequest) Reset() {
	*x = GetJobRequest{}
	mi := &file_jobs_jobs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRequest) ProtoMessage() {}

func (x *GetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRequest.ProtoReflect.Descriptor instead.
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{4}
}

func (x *GetJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetJobRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *GetJobRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// GetJobResponse contains the result of a job retrieval attempt.
type GetJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // ID of the job
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`    // ID of the workflow
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                              // Status of the job
	ScheduledAt   string                 `protobuf:"bytes,4,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"` // Time the job is scheduled to run
	StartedAt     string                 `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`       // Time the job was started
	CompletedAt   string                 `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"` // Time the job was completed
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // Time the job was created
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`       // Time the job was last updated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobResponse) Reset() {
	*x = GetJobResponse{}
	mi := &file_jobs_jobs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobResponse) ProtoMessage() {}

func (x *GetJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobResponse.ProtoReflect.Descriptor instead.
func (*GetJobResponse) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{5}
}

func (x *GetJobResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetJobResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *GetJobResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetJobResponse) GetScheduledAt() string {
	if x != nil {
		return x.ScheduledAt
	}
	return ""
}

func (x *GetJobResponse) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *GetJobResponse) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *GetJobResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetJobResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// GetJobByIDRequest contains the details needed to get a job by ID.
type GetJobByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the job
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobByIDRequest) Reset() {
	*x = GetJobByIDRequest{}
	mi := &file_jobs_jobs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobByIDRequest) ProtoMessage() {}

func (x *GetJobByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobByIDRequest.ProtoReflect.Descriptor instead.
func (*GetJobByIDRequest) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{6}
}

func (x *GetJobByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetJobByIDResponse contains the result of a job retrieval attempt.
type GetJobByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // ID of the job
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`    // ID of the workflow
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // ID of the user
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                              // Status of the job
	ScheduledAt   string                 `protobuf:"bytes,5,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"` // Time the job is scheduled to run
	StartedAt     string                 `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`       // Time the job was started
	CompletedAt   string                 `protobuf:"bytes,7,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"` // Time the job was completed
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // Time the job was created
	UpdatedAt     string                 `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`       // Time the job was last updated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobByIDResponse) Reset() {
	*x = GetJobByIDResponse{}
	mi := &file_jobs_jobs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobByIDResponse) ProtoMessage() {}

func (x *GetJobByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobByIDResponse.ProtoReflect.Descriptor instead.
func (*GetJobByIDResponse) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{7}
}

func (x *GetJobByIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetJobByIDResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *GetJobByIDResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetJobByIDResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetJobByIDResponse) GetScheduledAt() string {
	if x != nil {
		return x.ScheduledAt
	}
	return ""
}

func (x *GetJobByIDResponse) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *GetJobByIDResponse) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *GetJobByIDResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetJobByIDResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// GetJobLogsRequest contains the details needed to get the logs of a job.
type GetJobLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // ID of the job
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"` // ID of the workflow
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // ID of the user
	Cursor        string                 `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`                           // Cursor for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobLogsRequest) Reset() {
	*x = GetJobLogsRequest{}
	mi := &file_jobs_jobs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobLogsRequest) ProtoMessage() {}

func (x *GetJobLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobLogsRequest.ProtoReflect.Descriptor instead.
func (*GetJobLogsRequest) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{8}
}

func (x *GetJobLogsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetJobLogsRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *GetJobLogsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetJobLogsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// Log contains the details of a log.
type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     string                 `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                         // Time the log was created
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                             // Log message
	SequenceNum   uint32                 `protobuf:"varint,3,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"` // Sequence number of the log
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_jobs_jobs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{9}
}

func (x *Log) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Log) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Log) GetSequenceNum() uint32 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

// GetJobLogsResponse contains the result of a job log retrieval attempt.
type GetJobLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // ID of the job
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"` // ID of the workflow
	Logs          []*Log                 `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`                               // List of log messages
	Cursor        string                 `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`                           // Cursor for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobLogsResponse) Reset() {
	*x = GetJobLogsResponse{}
	mi := &file_jobs_jobs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobLogsResponse) ProtoMessage() {}

func (x *GetJobLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobLogsResponse.ProtoReflect.Descriptor instead.
func (*GetJobLogsResponse) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{10}
}

func (x *GetJobLogsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetJobLogsResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *GetJobLogsResponse) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *GetJobLogsResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// ListJobsRequest contains the details needed to list all jobs for a workflow_id.
type ListJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"` // ID of the workflow
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // ID of the user
	Cursor        string                 `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`                           // Cursor for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	mi := &file_jobs_jobs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{11}
}

func (x *ListJobsRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ListJobsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListJobsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// JobsResponse contains the result of a job listing attempt.
type JobsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // ID of the job
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`    // ID of the workflow
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                              // Status of the job
	ScheduledAt   string                 `protobuf:"bytes,4,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"` // Time the job is scheduled to run
	StartedAt     string                 `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`       // Time the job was started
	CompletedAt   string                 `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"` // Time the job was completed
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // Time the job was created
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`       // Time the job was last updated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobsResponse) Reset() {
	*x = JobsResponse{}
	mi := &file_jobs_jobs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobsResponse) ProtoMessage() {}

func (x *JobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobsResponse.ProtoReflect.Descriptor instead.
func (*JobsResponse) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{12}
}

func (x *JobsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobsResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *JobsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobsResponse) GetScheduledAt() string {
	if x != nil {
		return x.ScheduledAt
	}
	return ""
}

func (x *JobsResponse) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *JobsResponse) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *JobsResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *JobsResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ListJobsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*JobsResponse        `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`     // List of jobs
	Cursor        string                 `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"` // Cursor for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	mi := &file_jobs_jobs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_jobs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_jobs_jobs_proto_rawDescGZIP(), []int{13}
}

func (x *ListJobsResponse) GetJobs() []*JobsResponse {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ListJobsResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

var File_jobs_jobs_proto protoreflect.FileDescriptor

const file_jobs_jobs_proto_rawDesc = "" +
	"\n" +
	"\x0fjobs/jobs.proto\x12\x04jobs\"q\n" +
	"\x12ScheduleJobRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12!\n" +
	"\fscheduled_at\x18\x03 \x01(\tR\vscheduledAt\"%\n" +
	"\x13ScheduleJobResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"@\n" +
	"\x16UpdateJobStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"\x19\n" +
	"\x17UpdateJobStatusResponse\"Y\n" +
	"\rGetJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"\xfc\x01\n" +
	"\x0eGetJobResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12!\n" +
	"\fscheduled_at\x18\x04 \x01(\tR\vscheduledAt\x12\x1d\n" +
	"\n" +
	"started_at\x18\x05 \x01(\tR\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\x06 \x01(\tR\vcompletedAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\tR\tupdatedAt\"#\n" +
	"\x11GetJobByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x99\x02\n" +
	"\x12GetJobByIDResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12!\n" +
	"\fscheduled_at\x18\x05 \x01(\tR\vscheduledAt\x12\x1d\n" +
	"\n" +
	"started_at\x18\x06 \x01(\tR\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\a \x01(\tR\vcompletedAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\tR\tupdatedAt\"u\n" +
	"\x11GetJobLogsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x16\n" +
	"\x06cursor\x18\x04 \x01(\tR\x06cursor\"`\n" +
	"\x03Log\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\tR\ttimestamp\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12!\n" +
	"\fsequence_num\x18\x03 \x01(\rR\vsequenceNum\"|\n" +
	"\x12GetJobLogsResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x1d\n" +
	"\x04logs\x18\x03 \x03(\v2\t.jobs.LogR\x04logs\x12\x16\n" +
	"\x06cursor\x18\x04 \x01(\tR\x06cursor\"c\n" +
	"\x0fListJobsRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"\xfa\x01\n" +
	"\fJobsResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12!\n" +
	"\fscheduled_at\x18\x04 \x01(\tR\vscheduledAt\x12\x1d\n" +
	"\n" +
	"started_at\x18\x05 \x01(\tR\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\x06 \x01(\tR\vcompletedAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\tR\tupdatedAt\"R\n" +
	"\x10ListJobsResponse\x12&\n" +
	"\x04jobs\x18\x01 \x03(\v2\x12.jobs.JobsResponseR\x04jobs\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor2\x9f\x03\n" +
	"\vJobsService\x12D\n" +
	"\vScheduleJob\x12\x18.jobs.ScheduleJobRequest\x1a\x19.jobs.ScheduleJobResponse\"\x00\x12P\n" +
	"\x0fUpdateJobStatus\x12\x1c.jobs.UpdateJobStatusRequest\x1a\x1d.jobs.UpdateJobStatusResponse\"\x00\x125\n" +
	"\x06GetJob\x12\x13.jobs.GetJobRequest\x1a\x14.jobs.GetJobResponse\"\x00\x12A\n" +
	"\n" +
	"GetJobByID\x12\x17.jobs.GetJobByIDRequest\x1a\x18.jobs.GetJobByIDResponse\"\x00\x12A\n" +
	"\n" +
	"GetJobLogs\x12\x17.jobs.GetJobLogsRequest\x1a\x18.jobs.GetJobLogsResponse\"\x00\x12;\n" +
	"\bListJobs\x12\x15.jobs.ListJobsRequest\x1a\x16.jobs.ListJobsResponse\"\x00B8Z6github.com/hitesh22rana/chronoverse/proto/go/jobs;jobsb\x06proto3"

var (
	file_jobs_jobs_proto_rawDescOnce sync.Once
	file_jobs_jobs_proto_rawDescData []byte
)

func file_jobs_jobs_proto_rawDescGZIP() []byte {
	file_jobs_jobs_proto_rawDescOnce.Do(func() {
		file_jobs_jobs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_jobs_jobs_proto_rawDesc), len(file_jobs_jobs_proto_rawDesc)))
	})
	return file_jobs_jobs_proto_rawDescData
}

var file_jobs_jobs_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_jobs_jobs_proto_goTypes = []any{
	(*ScheduleJobRequest)(nil),      // 0: jobs.ScheduleJobRequest
	(*ScheduleJobResponse)(nil),     // 1: jobs.ScheduleJobResponse
	(*UpdateJobStatusRequest)(nil),  // 2: jobs.UpdateJobStatusRequest
	(*UpdateJobStatusResponse)(nil), // 3: jobs.UpdateJobStatusResponse
	(*GetJobRequest)(nil),           // 4: jobs.GetJobRequest
	(*GetJobResponse)(nil),          // 5: jobs.GetJobResponse
	(*GetJobByIDRequest)(nil),       // 6: jobs.GetJobByIDRequest
	(*GetJobByIDResponse)(nil),      // 7: jobs.GetJobByIDResponse
	(*GetJobLogsRequest)(nil),       // 8: jobs.GetJobLogsRequest
	(*Log)(nil),                     // 9: jobs.Log
	(*GetJobLogsResponse)(nil),      // 10: jobs.GetJobLogsResponse
	(*ListJobsRequest)(nil),         // 11: jobs.ListJobsRequest
	(*JobsResponse)(nil),            // 12: jobs.JobsResponse
	(*ListJobsResponse)(nil),        // 13: jobs.ListJobsResponse
}
var file_jobs_jobs_proto_depIdxs = []int32{
	9,  // 0: jobs.GetJobLogsResponse.logs:type_name -> jobs.Log
	12, // 1: jobs.ListJobsResponse.jobs:type_name -> jobs.JobsResponse
	0,  // 2: jobs.JobsService.ScheduleJob:input_type -> jobs.ScheduleJobRequest
	2,  // 3: jobs.JobsService.UpdateJobStatus:input_type -> jobs.UpdateJobStatusRequest
	4,  // 4: jobs.JobsService.GetJob:input_type -> jobs.GetJobRequest
	6,  // 5: jobs.JobsService.GetJobByID:input_type -> jobs.GetJobByIDRequest
	8,  // 6: jobs.JobsService.GetJobLogs:input_type -> jobs.GetJobLogsRequest
	11, // 7: jobs.JobsService.ListJobs:input_type -> jobs.ListJobsRequest
	1,  // 8: jobs.JobsService.ScheduleJob:output_type -> jobs.ScheduleJobResponse
	3,  // 9: jobs.JobsService.UpdateJobStatus:output_type -> jobs.UpdateJobStatusResponse
	5,  // 10: jobs.JobsService.GetJob:output_type -> jobs.GetJobResponse
	7,  // 11: jobs.JobsService.GetJobByID:output_type -> jobs.GetJobByIDResponse
	10, // 12: jobs.JobsService.GetJobLogs:output_type -> jobs.GetJobLogsResponse
	13, // 13: jobs.JobsService.ListJobs:output_type -> jobs.ListJobsResponse
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_jobs_jobs_proto_init() }
func file_jobs_jobs_proto_init() {
	if File_jobs_jobs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_jobs_jobs_proto_rawDesc), len(file_jobs_jobs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jobs_jobs_proto_goTypes,
		DependencyIndexes: file_jobs_jobs_proto_depIdxs,
		MessageInfos:      file_jobs_jobs_proto_msgTypes,
	}.Build()
	File_jobs_jobs_proto = out.File
	file_jobs_jobs_proto_goTypes = nil
	file_jobs_jobs_proto_depIdxs = nil
}
