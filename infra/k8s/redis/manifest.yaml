apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-connection-config
  namespace: chronoverse
  labels:
    app: redis
    component: database
data:
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: chronoverse
  labels:
    app: redis
    component: database
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: database
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
          name: redis
        resources:
          limits:
            cpu: "1000m"
            memory: "1536Mi"
          requests:
            cpu: "500m"
            memory: "768Mi"
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping | grep PONG
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping | grep PONG
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: chronoverse
  labels:
    app: redis
    component: database
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
