apiVersion: v1
kind: ConfigMap
metadata:
  name: analytics-processor-config
  namespace: chronoverse
  labels:
    app: analytics-processor
    component: backend
data:
  KAFKA_CONSUMER_GROUP: "analytics-processor"
  ENV: "production"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-processor
  namespace: chronoverse
  labels:
    app: analytics-processor
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics-processor
      component: backend
  template:
    metadata:
      labels:
        app: analytics-processor
        component: backend
    spec:
      initContainers:
      - name: wait-for-certs
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          while [ ! -f /certs/auth.ed ] || [ ! -f /certs/auth.ed.pub ]; do 
            echo "Waiting for certificates..."
            sleep 1
          done
          echo "âœ… Certificates found!"
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      containers:
      - name: analytics-processor
        image: ghcr.io/hitesh22rana/chronoverse/analytics-processor:latest
        envFrom:
        - configMapRef:
            name: postgres-connection-config
        - secretRef:
            name: postgres-secret
        - configMapRef:
            name: kafka-connection-config
        - configMapRef:
            name: observability-config
        - configMapRef:
            name: analytics-processor-config
        - configMapRef:
            name: docker-proxy-connection-config
        resources:
          limits:
            cpu: "250m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        volumeMounts:
        - name: certs-storage
          mountPath: /certs
      volumes:
      - name: certs-storage
        persistentVolumeClaim:
          claimName: certs-pvc
